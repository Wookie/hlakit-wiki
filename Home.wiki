=HLAKit Programming Manual=
By **David Huseby**\\
Last Updated: **June 7, 2010**

==Introduction==
HLAKit is a new compiler for a language based on NESHLA (NES High Level Assembler) by Brian Provinciano.  The old NESHLA compiler is targeted only at the NES system and has lots of NES-specific features in both the language and the standard library.  HLAKit aims to be a compiler for a more general HLA language targeted at as many old video game consoles and computers as possible.

The HLAKit compiler is implemented in Python and uses the pyparsing module to handle all of the language parsing.  The goal is to structure the compiler in such a way that all platform/CPU specific pieces of the language are modular and swappable.  Currently, the list of platform and/or CPU specific parts includes: assembly opcodes, register names, if/while test values, and preprocessor directives.  These will be explained in more detail later on.

Why do this?  An HLA language gives a nice balance between structured programming and assembly language.  It allows you to program using functions, structs, named variables, if-else blocks and loops while still preserving precise, cycle-counted control over the machine.  Unlike C, the HLA understood by the HLAKit compiler uses assembly for the body of functions.  When you are coding for old, 8-bit and 16-bit computers that have precise timing requirements, assembly language is the only way to be sure you are getting the most out of the machine.

==Contents==

* [[FAQ]]

* [[The Preprocessor]]
** [[Preprocessor Defines|Defines]]
** [[Preprocessor Messages|Messages]]
** [[Preprocessor Files|Files]]
** [[Preprocessor ROM and RAM Banks and Blocks|ROM and RAM Banks and Blocks]]
** [[Preprocessor Padding|Padding]]
** [[Preprocessor Interrupt Vectors|Interrupt Vectors]]
** Platform Specific
*** 6502
**** [[6502 Interrupt Vectors]]
**** Nintendo Entertainment System
***** [[Preprocessor iNES Header|iNES Header]]

* [[Variable Declaration and Use]]
** [[Variable Declaration and Use|Types]]
** [[Variable Declaration and Use|Declarations]]

** [[Variable Declaration and Use|Manipulators]]

* [[Function Declaration and Use]]
** [[Function Declaration and Use|Introduction]]
** [[Function Declaration and Use|Declaring Functions]]
** [[Function Declaration and Use|return and noreturn]]
** [[Function Declaration and Use|Parameters]]
** [[Function Declaration and Use|Interrupt Type Declaring]]
** [[Function Declaration and Use|Calling Functions]]

* [[Integers and Arithmetic Operations]]
** [[Integers and Arithmetic Operations|Introduction]]
** [[Integers and Arithmetic Operations|Integers]]
** [[Integers and Arithmetic Operations|Arithmetic Operations]]
*** [[Integers and Arithmetic Operations|Operators]]
*** [[Integers and Arithmetic Operations|Keywords]]
*** [[Integers and Arithmetic Operations|Examples]]

* [[Conditional Statements]]
** [[Conditional Statements|Introduction]]
** [[Conditional Statements|If Statements]]
** [[Conditional Statements|While Statements]]
** [[Conditional Statements|Do While Statements]]
** [[Conditional Statements|Forever Statements]]
** [[Conditional Statements|Switch Statements]]

* [[Compiler Options]]

* Target Machines
** 6502
*** Atari Lynx
*** Nintendo Entertainment System__
**** [[NES Programming FAQ and Important Pointers]]
***** [[NES Programming FAQ and Important Pointers|Introduction]]
***** [[NES Programming FAQ and Important Pointers|General PPU Registers]]
***** [[NES Programming FAQ and Important Pointers|Name and Attribute Tables (the background graphics)]]
***** [[NES Programming FAQ and Important Pointers|Scrolling]]
**** NES Code Library
***** [[lib_ram.as]]
***** [[nes.h]] (Standard NES Functions, Macros and Defines)
****** [[nes_audio.h]]
****** [[nes_io.h]]
****** [[nes_mappers.h]]
****** [[nes_system.h]]
****** [[nes_video.h]]
*** Apple II
** Sharp LR35902 Z80
*** Nintendo Game Boy
** Zilog Z80
*** Sega Master System
*** Sega Game Gear
** Motorola 68000
*** Sega Genesis
*** Sega Nomad
*** Neo Geo AES
** ARM7TDMI
*** Nintendo Game Boy Advance


* Target Code Libraries
** 6502
*** [[std.h]]
**** [[std_assignment.h]]
**** [[std_bitwise.h]]
**** [[std_boolean.h]]
**** [[std_init.as]]
**** [[std_jumps.as]]
**** [[std_math.as]]
***** [[std_math.h]]
**** [[std_memory.as]]
***** [[std_memory.h]]
**** [[std_palette.as]]
**** [[std_stack.h]]
** Sharp LR35902 Z80
** Zilog Z80
** Motorola 68000
** ARM7TDMI