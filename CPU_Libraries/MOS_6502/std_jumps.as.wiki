[[[
===Introduction===

This file provides functions that implement indirect subroutine calling support that doesn't rely on manual stack manipulation.
]]]
==jsrind_f==

{{{
#!c
function noreturn jsrind_f()
{
    jmp [_jsrind_temp]
}
}}}

==jsrind==

{{{
#!c
inline jsrind(pproc)
{
    lda pproc+0
    ora pproc+1
    if (not zero) {
        assign_16_16(_jsrind_temp, pproc)
        jsrind_f()
    }
}
}}}

==jsrind_x==

{{{
#!c
inline jsrind_x(pproc)
{
    lda pproc+0,x
    ora pproc+1,x
    if (not zero) {
        x_assign_16_16(_jsrind_temp, pproc)
        jsrind_f()
    }
}
}}}

==jsrind_y==

{{{
#!c
inline jsrind_y(pproc)
{
    lda pproc+0,y
    ora pproc+1,y
    if (not zero) {
        y_assign_16_16(_jsrind_temp, pproc)
        jsrind_f()
    }
}
}}}

==jsrind_imd==

{{{
#!c
inline jsrind_imd(pproc)
{
    lda #lo(pproc)
    ora #hi(pproc)
    if (not zero) {
        assign_16i(_jsrind_temp, pproc)
        jsrind_f()
    }
}
}}}

==jsr_table==

{{{
#!c
inline jsr_table(ptable)
{
    asl a
    tay
    y_assign_16_16(_jsrind_temp, ptable)
    jsrind_f()
}
}}}

==jsr_table_xy==

{{{
#!c
inline jsr_table_xy(ptable)
{
    x_assign_16_16(_p_temp, ptable)
    y_ind_assign_16_16(_jsrind_temp, _p_temp)
    jsrind_f()
}
}}}
