=Lynx ROM=

Unlike pretty much every other 6502 based computer, the Atari Lynx does not access its cart ROM directly.  Instead it loads data from the cart ROM into RAM as needed through a couple of I/O registers.

That creates an interesting situation for compilers since the compiled code and data will be stored in a ROM image with it's own address space and be loaded into RAM and executed there.  This means we need to have overlapping addressing schemes, one for execution and one for storage.

So when writing games for the Atari Lynx, we use the regular #ram.* preprocessor directives to set the execution addressing details so that the compiler can calculate addresses and relative jumps correctly.

As for the Lynx ROM cart addressing, we have several new ROM preprocessor directives, nearly identical to the basic ROM directives except that they do not affect the #ram.* directives and only affect where the compiled code/data is located in the finished ROM image.

**#lynx.rom.org segmentaddress[, address counter][, maxsize]**

**#lynx.rom.padding value**

**#lynx.rom.end**